x-common-migration: &common-migration
  POSTGRES_HOST: ${POSTGRES_HOST:-land-grants-backend-postgres}
  SCHEMA_ROLE: ${POSTGRES_SCHEMA_ROLE:-land_grants_api}
  SCHEMA_NAME: ${POSTGRES_SCHEMA_NAME:-public}

x-common-postgres: &common-postgres
  POSTGRES_PORT: 5432
  POSTGRES_DB: ${POSTGRES_DB:-land_grants_api}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-land_grants_api}
  POSTGRES_USER: ${POSTGRES_USER:-land_grants_api}

services:

  database-up:
    image: liquibase/liquibase:4.31-alpine
    profiles: [migrations]
    restart: "no"
    environment:
      <<: [*common-postgres, *common-migration]
    entrypoint: >
      sh -c "/scripts/migration/database-up"
    depends_on:
      land-grants-backend-postgres:
        condition: service_healthy
    volumes:
      - ./changelog:/liquibase/changelog
      - ./scripts:/scripts
    networks:
      - land-grants-net

  database-down:
    image: liquibase/liquibase:4.31-alpine
    profiles: [migrations]
    restart: "no"
    environment:
      <<: [*common-postgres, *common-migration]
    entrypoint: >
      sh -c "/scripts/migration/database-down"
    depends_on:
      land-grants-backend-postgres:
        condition: service_healthy
    volumes:
      - ./changelog:/liquibase/changelog
      - ./scripts:/scripts
    networks:
      - land-grants-net

  land-grants-backend-postgres:
    image: postgis/postgis:16-3.4
    environment:
      <<: *common-postgres
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - land-grants-net

  land-grants-backend:
    build:
      context: .
      target: development
    environment:
      NODE_ENV: local
      DISABLE_POSTGRES: false
      POSTGRES_HOST: ${POSTGRES_HOST:-land-grants-backend-postgres}
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-land_grants_api}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-land_grants_api}
      POSTGRES_USER: ${POSTGRES_USER:-land_grants_api}
    ports:
      - 3009:3009
    depends_on:
      land-grants-backend-postgres:
        condition: service_healthy
    networks:
      - land-grants-net

volumes:
  postgres_data:

networks:
  land-grants-net:
    name: land-grants-net
    driver: bridge
