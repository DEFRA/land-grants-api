name: Check Pull Request

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review

jobs:
  pr-validator:
    name: Run Pull Request Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest tag
        run: |
          git fetch --tags
          git fetch --prune --unshallow || true
          LATEST_TAG=$(git describe --tags --abbrev=0)

          git config --global user.email "ci@defra.gov.uk"
          git config --global user.name "ci"

          npm version "$LATEST_TAG"
          git add package.json
          git commit -S -m "update version" --no-verify
          echo "$LATEST_TAG"

      - name: Test code and Create Test Coverage Reports
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - run: |
          npm ci --ignore-scripts
          npm run build
          npm run format:check
          npm run lint
          npm test

      - name: Test Docker Image Build
        run: |
          set +e
          docker build --no-cache --tag cdp-node-backend-template .
          exit $?

      - name: SonarCloud Scan
        if: github.actor != 'dependabot[bot]'
        uses: SonarSource/sonarcloud-github-action@master
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  contract-tests:
    name: Run Pact Contract Tests
    runs-on: self-hosted
    env:
      PACT_BROKER_URL: ${{ secrets.PACT_BROKER_URL }}
      PACT_BROKER_USERNAME: ${{ secrets.PACT_BROKER_USERNAME }}
      PACT_BROKER_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Contract Tests
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - run: |
          npm ci --ignore-scripts
          npm run test:contracts

  version-check:
    uses: ./.github/workflows/check-version.yml
